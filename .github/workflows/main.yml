name: AuraOs Build (Debug & Release)

permissions:
  contents: read
  actions: read
  security-events: write

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-debug:
    name: Assemble Debug Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Generate Gradle wrapper if missing (uses system Gradle if needed)
      - name: Ensure Gradle wrapper exists
        run: |
          if [ ! -f ./gradlew ]; then
            gradle wrapper
          fi

      # Cache Gradle dependencies and toolchains for performance
      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle

      # Build with configuration cache and parallel execution
      - name: Assemble Debug (Gradle Toolchains, Parallel, Config Cache)
        run: ./gradlew assembleDebug --parallel --configuration-cache

  build-release:
    name: Assemble Release Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Ensure Gradle wrapper exists
        run: |
          if [ ! -f ./gradlew ]; then
            gradle wrapper
          fi

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Assemble Release (Gradle Toolchains, Parallel, Config Cache)
        run: ./gradlew assembleRelease --parallel --configuration-cache
